#!/bin/bash
#
# Copyright (c) 2013,2014 Imagination Technologies
# Original-Author: Paul Burton <paul.burton@imgtec.com>
#
# Writes u-boot and Android filesystems to the sd card.
# Derived from the Debian setup script by Paul Burton
#
# Usage:
#   ./mksdcard-ext4 /dev/sdX
#

set -e
tmpDir=`mktemp -d`
ubootPrebuiltDir="$ANDROID_BUILD_TOP/device/imgtec/ci20/u-boot"

cleanup()
{
  echo "Cleaning up..."
  [ -z "${sdMount}" ] || sudo umount ${sdMount}
  rm -rf ${tmpDir}
  [ "${finished}" = "true" ] && sudo eject ${device} && echo "Cleanup completed; it is safe to remove your card"
  trap - EXIT INT TERM
}
trap cleanup EXIT INT TERM

die()
{
  echo "$@" >&2
  exit 1
}

sfdisk_ci20()
{
  sfdisk_tool=`which sfdisk`
  blockdev_tool=`which blockdev`
  partprobe_tool=`which partprobe`

  [ -f "$sfdisk_tool" ] || die "No sfdisk in \$PATH"
  [ -f "$blockdev_tool" ] || die "No blockdev in \$PATH"
  [ -f "$partprobe_tool" ] || die "No partprobe in \$PATH"
  [ -b "$1" ] || die "Device '$1' not found"

  sfdisk_version=`$sfdisk_tool --version | sed 's,.*2\.\([0-9]*\)\.[0-9]*,\1,'`

  unset sfdisk_is_ancient
  test $sfdisk_version -lt 26 && sfdisk_is_ancient=1

  sfdisk_dev="$1"
  shift

  sfdisk_parts=`echo $* | tr ' ' '\n'`

  set +e
  if [ $sfdisk_is_ancient ]; then
      echo "$sfdisk_parts" | tr -d M | sudo $sfdisk_tool -L -uM "$sfdisk_dev"
  else
      echo "$sfdisk_parts" | sudo $sfdisk_tool "$sfdisk_dev"
  fi
  set -e

  sudo $blockdev_tool --rereadpt $sfdisk_dev
  sudo $partprobe_tool $sfdisk_dev
  sleep 2
}

#check for U-Boot prebuilt dir
[ ! -z "${ANDROID_BUILD_TOP}" ] || die "ANDROID_BUILD_TOP has not been initialized"
[ -e "${ubootPrebuiltDir}" ] || die "U-Boot prebuilt directory '${ubootPrebuiltDir}' does not exist"

# check device
device="$1"
[ -e "${device}" ] || die "Device '${device}' not found"
grep ${device} /etc/mtab >/dev/null && \
  die "Device '${device}' contains mounted partitions"

# check for Android images
bootImg=${BOOTIMG:-${OUT}/boot.img}
[ -e "${bootImg}" ] || die "Android boot image '${bootImg}' not found"
recoveryImg=${RECOVERYIMG:-${OUT}/recovery.img}
[ -e "${recoveryImg}" ] || die "Android recovery image '${recoveryImg}' not found"
systemImg=${SYSTEMIMG:-${OUT}/system.img}
[ -e "${systemImg}" ] || die "Android system image '${systemImg}' not found"

# FIXME: sfdisk often fails to reread the partition information
if [ "$WITH_GMS" == "true" ]; then
  sfdisk_ci20 ${device} 2M,30M 32M,1750M 1782M,256M 2038M,2048M
else
  sfdisk_ci20 ${device} 2M,30M 32M,1000M 1032M,256M 1288M,2048M
fi

partitions=("Boot" "System" "Cache" "Data")

for((i=4; i>0; i--));
do

  if [ -e "$device$i" ]; then
    part=${i}
  elif [ -e "${device}p$" ]; then
    part="p${i}"
  fi

  if [ $i -eq 2 ]; then
    partSystem=${part}
  fi

  if [ $i -le 2 ]; then
    # Partitions 1 and 2 will be set up as ext4
    sudo mkfs.ext4 -L "${partitions[$i-1]}" ${device}${part}
  else
    # Partitions 3 and 4 will be set up as f2fs
    # mkfs.f2fs command requires f2fs-tools package
    sudo mkfs.f2fs -l "${partitions[$i-1]}" ${device}${part}
  fi
done

# mount ext4 partition
sdMount=${tmpDir}/sd_mount
mkdir ${sdMount}
sudo mount ${device}${part} ${sdMount}
sudo chmod a+w ${sdMount}

# install MMC u-boot
sudo dd if=${ubootPrebuiltDir}/mmc/u-boot-spl.bin of=${device} obs=512 seek=1
sudo dd if=${ubootPrebuiltDir}/mmc/u-boot.img of=${device} obs=1K seek=14

# copy Android boot image
sudo cp -v ${bootImg} ${sdMount}/

# copy Android recovery image
sudo cp -v ${recoveryImg} ${sdMount}/

envText=${tmpDir}/u-boot-env.txt
envBin=${tmpDir}/u-boot-env.bin
envSize=$((32 * 1024))

# Command to boot Android from MMC
androidInitCmd="ext4load mmc 0:1 0x88000000 boot.img; boota 0x88000000"
# Command to set device specific MAC address
ethArgs='env set bootargs ${bootargs} dm9000.mac_addr=${ethaddr}'

echo "ainitcmd=${androidInitCmd}" >>${envText}
echo "baudrate=115200" >>${envText}
echo "ethargs=${ethArgs}" >>${envText}
echo "stderr=eserial0,eserial4" >>${envText}
echo "stdin=eserial0,eserial4" >>${envText}
echo "stdout=eserial0,eserial4" >>${envText}

# FIXME: Decide what to do after completing the flash setup. For a
# onetime setup image it's convenient to reset the bootcmd. When using
# the same sdcard to install multiple times it is not
oneTime=${ONETIME-false}
if [ "${oneTime}" = "true" ]; then
  # Initialise flash then switch to booting Android from MMC
  echo "bootcmd=run ainitcmd; setenv bootcmd run abootcmd; saveenv" >>${envText}
else
  # Initialise flash
  echo "bootcmd=run ethargs; run ainitcmd" >>${envText}
fi

echo
echo "Please wait, writing system.img"

sudo dd if=${systemImg} of=${device}${partSystem}

echo
echo "MMC U-boot environment:"
cat ${envText}
${ubootPrebuiltDir}/mkenvimage -s ${envSize} -o ${envBin} ${envText}
sudo dd if=${envBin} of=${device} obs=1 seek=$((526 * 1024))

echo
echo "SD contents:"
ls -hl ${sdMount}/

finished=true
echo
echo "Finished, wait for clean up before removing your card!"
